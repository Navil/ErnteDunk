<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>playerSpeed = 5;
knockingback = undefined;
knockback_distance_touch = 50;
knockback_duration_wind = 1.5; //seconds
can_shoot = true;
winds = ds_list_create();

image_xscale = view_direction;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>knockingback = undefined;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_debug_message(view_direction);
if(knockingback == undefined){

if (MOVELEFT) { 
    x -= playerSpeed; 
    view_direction = -1;
    image_xscale = -1;
}

if (MOVERIGHT) { 
    x += playerSpeed; 
    view_direction = 1;
    image_xscale = 1;
}

if (MOVEUP) { 
    y -= playerSpeed; 
}

if (MOVEDOWN){ 
    y += playerSpeed; 
}

if (ATTACK){
    var inst;
    if (can_shoot){
        inst = instance_create(x, y, obj_wind);
        inst.speed = 10;
        if(view_direction==1)
            inst.direction = 0;
        else
            inst.direction = 180;
            
        inst.owner = id;
        
        can_shoot = false;
        alarm[0] = 1.3 * room_speed;
    }
}
}
//otherPlayer = player1;
//horizontal collission

var hitId = instance_place(x+5,y,obj_wind);
if (hitId != noone){
    if(hitId.owner != id &amp;&amp; knockingback == undefined){
        //show_debug_message("Hit from the right");
        
        //x -= knockback_distance_wind;
        knockingback = "left";
        alarm[1] = room_speed * knockback_duration_wind;
        instance_destroy(hitId);
    }  
    //audio_play_sound(rooster0, 10, false);
}

hitId = instance_place(x-5,y,obj_wind);
if (hitId != noone){
    if(hitId.owner != id &amp;&amp; knockingback == undefined){
        //show_debug_message("Hit from the left");
        knockingback = "right";
        alarm[1] = room_speed * knockback_duration_wind;
        instance_destroy(hitId);
    }  
    //audio_play_sound(rooster0, 10, false);
}
    
//vertical collission
hitId = instance_place(x,y+5,obj_wind);
if (hitId != noone){
    //show_debug_message(hitId);
    if(hitId.owner != id &amp;&amp; knockingback != undefined){
        //y -= knockback_distance_wind;
        instance_destroy(hitId);
    }  
    //audio_play_sound(rooster0, 10, false);
}
hitId = instance_place(x,y-5,obj_wind);
if (hitId != noone){
    //show_debug_message(hitId);
    if(hitId.owner != id &amp;&amp; knockingback != undefined){
        //y += knockback_distance_wind;
        instance_destroy(hitId);
    }  
    //audio_play_sound(rooster0, 10, false);
}

if (knockingback == "right") {
    x += 5;
}else if(knockingback == "left"){
    x -= 5;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>diffX = abs(x - other.x);
diffY = abs(y - other.y);

if(diffX &gt; diffY){
    if (x &gt; other.x){
        x += knockback_distance_touch;
    }else{
        x -= knockback_distance_touch;
    }
}else{
    if (y &gt; other.y){
        y += knockback_distance_touch;
    }else{
        y -= knockback_distance_touch;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
